import { useState, useEffect } from "react";
import Footer from "../components/Footer";
import Image from "next/image";
import Gif from "../assets/heart.gif";
import "../app/globals.css";
import dynamic from "next/dynamic";
import Head from "next/head";
const Chart = dynamic(() => import("../components/Graph.js"), { ssr: false });
const Swipe = dynamic(() => import("../app/swipe/Swipe.js"), { ssr: false });
export default function TaskManager() {
  const [tasks, setTasks] = useState([]);
  const [completedTasks, setCompletedTasks] = useState(0);
  const [newTaskName, setNewTaskName] = useState("");

  const addTask = () => {
    if (!newTaskName.trim()) return;
    const newTask = {
      id: tasks.length + 1,
      name: newTaskName.trim(),
      completed: false,
    };
    setTasks([...tasks, newTask]);
    setNewTaskName("");
  };

  const toggleTaskCompletion = (id) => {
    const updatedTasks = tasks.map((task) =>
      task.id === id ? { ...task, completed: !task.completed } : task
    );
    setTasks(updatedTasks);
    if (updatedTasks.find((task) => task.id === id).completed) {
      setCompletedTasks((prev) => prev + 1);
    } else {
      setCompletedTasks((prev) => prev - 1);
    }
  };

  return (
    <div className="min-h-screen">
      <Head>
        <title>Task Manager</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="container mx-auto py-1">
        {/* Progress bar section */}
        <div className="shadow-[rgba(0,_0,_0,_0.4)_0px_30px_90px] progress-section bg-blue-600 text-white rounded-xl p-3 mb-3">
          <h1 className="text-lg font-bold">Your Daily Goal Almost Done</h1>
          <p>
            {completedTasks} of {tasks.length} Completed
          </p>
          <div className="w-full bg-blue-500 mt-2 rounded-lg">
            <div
              className="bg-white h-3 rounded-lg"
              style={{ width: `${(completedTasks / tasks.length) * 100}%` }}
            ></div>
          </div>
        </div>

        {/* Today's goal */}
        <div className="shadow-[rgba(0,_0,_0,_0.4)_0px_30px_90px] flex justify-between items-center mb-2">
          <h2 className="text-lg font-bold">Today&apos;s goal</h2>

          <div className="w-15 h-10">
            <Image src={Gif} alt="gif" width={90} height={90} />
          </div>
        </div>

        {/* Task input section */}
        <div className="mb-4 flex justify-between items-center shadow-[rgba(0,_0,_0,_0.4)_0px_30px_90px]">
          <input
            type="text"
            placeholder="Enter task name"
            value={newTaskName}
            onChange={(e) => setNewTaskName(e.target.value)}
            className="mr-2 py-1 px-4 border border-gray-400 rounded-lg flex-grow text-black"
          />
          <button
            onClick={addTask}
            className="bg-gradient-to-r from-blue-600 via-blue-500 to-blue-400 hover:from-blue-700 hover:via-blue-400 hover:to-blue-500 text-white font-bold py-1 px-2 rounded-lg transition duration-300 ease-in-out"
          >
            Add Task
          </button>
        </div>

        {/* Task list */}
        <table className="w-full border-black rounded-sm mb-2 shadow-[inset_400px_40px_50px_200px_#1a202c]">
          <tbody>
            {tasks.map((task) => (
              <tr key={task.id} className="border">
                <td className="p-3 text-lg">{task.name}</td>
                <td className="p-3 flex justify-end">
                  <input
                    checked={task.completed}
                    type="checkbox"
                    onChange={() => toggleTaskCompletion(task.id)}
                    className="h-6 w-6 rounded-md text-green-500 transition duration-300 ease-in-out"
                  />
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </main>
      <Swipe className="mt-1 shadow-[inset_400px_40px_50px_200px_#1a202c] md:flex" />
      <Chart className="mt-1 shadow-[inset_400px_40px_50px_200px_#1a202c] md:flex" />
      <Footer />
    </div>
  );
}
